{"version":3,"sources":["components/Map.js","stations.js","list_stations.js","components/all2020.csv","components/RangeInput.js","components/MapWrapper.js","App.js","reportWebVitals.js","index.js"],"names":["mapboxgl","workerClass","MapboxWorker","Map","width","height","viewState","onViewStateChange","stations","trips","time_filter","loading","isPlaying","initCounters","zeros","map","s","id","filterChange","update","forEach","element","start_minutes","undefined","selectedStation","end_id","start_id","red","green","neutral","React","useState","setSelectedStation","counters","setCounters","useEffect","layers","ColumnLayer","data","pickable","extrude","opacity","radiusMaxPixels","radius","getPosition","d","longitude","latitude","getFillColor","elevationScale","getElevation","Math","abs","onHover","object","onClick","autoHighlight","updateTriggers","transitions","duration","easing","easeCubicInOut","ArcLayer","getSourcePosition","start_position","getTargetPosition","end_position","getSourceColor","getTargetColor","visible","getFilterValue","filterRange","onFilteredItemsChange","x","extensions","DataFilterExtension","filterSize","countItems","mapboxApiAccessToken","mapStyle","getTooltip","name","station_info","3186","3195","3199","3792","3185","3275","3639","3276","3202","3211","3213","3640","3187","3203","3207","3678","3194","3206","3225","3220","3196","3272","3269","3638","3278","3273","3279","3270","3205","3209","3267","3212","3184","3681","3679","3483","3280","3214","3791","3481","3193","3677","3268","3281","3210","3201","3694","3192","3198","3277","3191","3426","list_stations","PositionContainer","styled","position","zIndex","bottom","display","justifyContent","alignItems","SliderInput","withStyles","root","marginLeft","valueLabel","background","color","Slider","RangeInput","min","max","value","onChange","animationSpeed","formatLabel","togglePlaying","lock","setLock","span","setSpan","localOnChange","newValue","updateValue","title","event","valueLabelDisplay","valueLabelFormat","jc","zoom","bearing","pitch","MapWrapper","props","setViewState","setState","setFilter","filter","t","hour","floor","slice","minutes","handleChangeViewState","handleFlyTo","destination","state","transitionDuration","transitionInterpolator","FlyToInterpolator","playing","csv","trip_data","Date","start_datetime","start_time","toTimeString","getHours","getMinutes","then","start_cut","stop_cut","filter_data","this","toggle","isPLaying","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9690706b.chunk.js","sourcesContent":["import React from \"react\";\nimport ReactMapGL from \"react-map-gl\";\nimport { ArcLayer, ColumnLayer, DeckGL, ScatterplotLayer } from \"deck.gl\";\nimport { DataFilterExtension } from \"@deck.gl/extensions\";\nimport { easeCubicInOut } from \"d3\";\nimport mapboxgl from \"mapbox-gl/dist/mapbox-gl\";\nimport MapboxWorker from \"mapbox-gl/dist/mapbox-gl-csp-worker\";\nmapboxgl.workerClass = MapboxWorker;\n\n// please be nice and don't misuse this token. Thanks\nconst MAPBOX_TOKEN =\n  \"pk.eyJ1IjoianpoYW5nNTYiLCJhIjoiY2tuMXhmNG44MTI1MzJ2bW9rbWhjNTM4YSJ9.Oukq6B1n9DOXpjfRZfUOJQ\";\n\nexport default function Map({\n  width,\n  height,\n  viewState,\n  onViewStateChange,\n  stations,\n  trips,\n  time_filter,\n  loading,\n  isPlaying,\n}) {\n  const initCounters = () => {\n    const zeros = {};\n    stations.map((s) => {\n      zeros[s.id] = 0;\n    });\n    return zeros;\n  };\n\n  const filterChange = () => {\n    const update = initCounters();\n    // const update = initCounters();\n    trips.forEach((element) => {\n      if (\n        element.start_minutes >= time_filter[0] &&\n        element.start_minutes <= time_filter[1]\n      ) {\n        if (selectedStation === undefined) {\n          // get net flow if nothing is selected\n          update[element.end_id] += 1;\n          update[element.start_id] -= 1;\n        } else {\n          //  get net flow with respect to selected station\n          if (\n            element.start_id === selectedStation ||\n            element.end_id === selectedStation\n          ) {\n            update[element.start_id] -= 1;\n            update[element.end_id] += 1;\n          }\n        }\n      }\n    });\n    // console.log(update);\n    // if (init) setChange(change + 1);\n    return update;\n  };\n\n  const red = [255, 0, 0];\n  const green = [0, 255, 0];\n  const neutral = [255, 140, 0];\n\n  const [arcToggle, setArcToggle] = React.useState(true);\n  const [selectedStation, setSelectedStation] = React.useState(undefined);\n  const [counters, setCounters] = React.useState(initCounters());\n\n  React.useEffect(() => {\n    setCounters(filterChange());\n  }, [selectedStation, loading, time_filter]);\n\n  function getTooltip({ object }) {\n    return (\n      object &&\n      `\\\n      Station Name: ${object.name}\n      Net gain in bikes: ${counters[object.id]}`\n    );\n  }\n\n  const layers = [\n    new ColumnLayer({\n      id: \"column-stations\",\n      data: stations,\n      pickable: true,\n      extrude: true,\n      opacity: 0.8,\n      radiusMaxPixels: 15,\n      radius: 50,\n      getPosition: (d) => [d.longitude, d.latitude],\n      getFillColor: (d) => {\n        if (counters[d.id] === 0) return neutral;\n        return counters[d.id] > 0 ? green : red;\n      },\n      elevationScale: 2,\n      getElevation: (d) => {\n        // console.log(d);\n        return Math.abs(counters[d.id]);\n      },\n      onHover: ({ object }) => {\n        if (object) {\n          setSelectedStation(object.id);\n        } else {\n          setSelectedStation(undefined);\n          setCounters(filterChange());\n        }\n      },\n      onClick: ({ object }) => {\n        // console.log(object);\n      },\n      autoHighlight: false,\n      updateTriggers: {\n        getFillColor: [counters],\n        getElevation: [counters],\n      },\n      transitions: {\n        getFillColor: {\n          duration: isPlaying ? 0 : 500,\n          easing: easeCubicInOut,\n        },\n        getElevation: {\n          duration: isPlaying ? 0 : 500,\n          easing: easeCubicInOut,\n        },\n      },\n    }),\n    new ArcLayer({\n      id: \"arc-layer\",\n      data: trips,\n      getSourcePosition: (d) => d.start_position,\n      getTargetPosition: (d) => d.end_position,\n      getSourceColor: (d) => {\n        return counters[d.start_id] > 0 ? green : red;\n      },\n      getTargetColor: (d) => {\n        return counters[d.end_id] > 0 ? green : red;\n      },\n      visible: selectedStation,\n      getFilterValue: (d) => [d.start_minutes, d.start_id],\n      filterRange: [\n        [time_filter[0], time_filter[1]],\n        [selectedStation, selectedStation],\n      ],\n      onFilteredItemsChange: (x) => {\n        setCounters(filterChange());\n      },\n      updateTriggers: {\n        getSourceColor: [time_filter, selectedStation, counters],\n        getTargetColor: [time_filter, selectedStation, counters],\n      },\n      extensions: [\n        new DataFilterExtension({ filterSize: 2, countItems: true }),\n      ],\n    }),\n  ];\n\n  return (\n    <div>\n      <ReactMapGL\n        mapboxApiAccessToken={MAPBOX_TOKEN}\n        width={width}\n        height={height}\n        viewState={viewState}\n        onViewStateChange={onViewStateChange}\n        mapStyle=\"mapbox://styles/mapbox/dark-v9\"\n      >\n        <DeckGL viewState={viewState} layers={layers} getTooltip={getTooltip} />\n      </ReactMapGL>\n    </div>\n  );\n}\n","// converted from stations.json\nexport const station_info = {\n  3186: {\n    name: \"Grove St PATH\",\n    latitude: 40.71958611647166,\n    longitude: -74.0431174635887,\n  },\n  3195: {\n    name: \"Sip Ave\",\n    latitude: 40.73089709786179,\n    longitude: -74.06391263008119,\n  },\n  3199: {\n    name: \"Newport Pkwy\",\n    latitude: 40.728744799999994,\n    longitude: -74.03210820000001,\n  },\n  3792: {\n    name: \"Columbus Dr at Exchange Pl\",\n    latitude: 40.71687,\n    longitude: -74.03281,\n  },\n  3185: {\n    name: \"City Hall\",\n    latitude: 40.717732500000004,\n    longitude: -74.04384499999999,\n  },\n  3275: {\n    name: \"Columbus Drive\",\n    latitude: 40.71835519823214,\n    longitude: -74.03891444206238,\n  },\n  3639: {\n    name: \"Harborside\",\n    latitude: 40.71925170000001,\n    longitude: -74.034234,\n  },\n  3276: {\n    name: \"Marin Light Rail\",\n    latitude: 40.71458403535893,\n    longitude: -74.04281705617905,\n  },\n  3202: {\n    name: \"Newport PATH\",\n    latitude: 40.7272235,\n    longitude: -74.03375890000001,\n  },\n  3211: { name: \"Newark Ave\", latitude: 40.72152515, longitude: -74.046304543 },\n  3213: {\n    name: \"Van Vorst Park\",\n    latitude: 40.71848892,\n    longitude: -74.047726625,\n  },\n  3640: {\n    name: \"Journal Square\",\n    latitude: 40.733670000000004,\n    longitude: -74.0625,\n  },\n  3187: {\n    name: \"Warren St\",\n    latitude: 40.721123600000006,\n    longitude: -74.03805095,\n  },\n  3203: {\n    name: \"Hamilton Park\",\n    latitude: 40.727595965999996,\n    longitude: -74.044247311,\n  },\n  3207: {\n    name: \"Oakland Ave\",\n    latitude: 40.7376037,\n    longitude: -74.05247829999999,\n  },\n  3678: {\n    name: \"Fairmount Ave\",\n    latitude: 40.72572613742557,\n    longitude: -74.07195925712584,\n  },\n  3194: {\n    name: \"McGinley Square\",\n    latitude: 40.7253399253558,\n    longitude: -74.06762212514876,\n  },\n  3206: { name: \"Hilltop\", latitude: 40.7311689, longitude: -74.0575736 },\n  3225: {\n    name: \"Baldwin at Montgomery\",\n    latitude: 40.7236589,\n    longitude: -74.0641943,\n  },\n  3220: {\n    name: \"5 Corners Library\",\n    latitude: 40.73496102000952,\n    longitude: -74.05950307846071,\n  },\n  3196: {\n    name: \"Riverview Park\",\n    latitude: 40.7443187,\n    longitude: -74.04399090000001,\n  },\n  3272: {\n    name: \"Jersey & 3rd\",\n    latitude: 40.723331586464354,\n    longitude: -74.04595255851744,\n  },\n  3269: {\n    name: \"Brunswick & 6th\",\n    latitude: 40.726011729646245,\n    longitude: -74.0503889322281,\n  },\n  3638: { name: \"Washington St\", latitude: 40.7242941, longitude: -74.0354826 },\n  3278: {\n    name: \"Monmouth and 6th\",\n    latitude: 40.72568548362901,\n    longitude: -74.0487903356552,\n  },\n  3273: {\n    name: \"Manila & 1st\",\n    latitude: 40.72165072487999,\n    longitude: -74.04288411140442,\n  },\n  3279: {\n    name: \"Dixon Mills\",\n    latitude: 40.72163014263835,\n    longitude: -74.04996782541275,\n  },\n  3270: {\n    name: \"Jersey & 6th St\",\n    latitude: 40.72528910781132,\n    longitude: -74.04557168483734,\n  },\n  3205: {\n    name: \"JC Medical Center\",\n    latitude: 40.71653978099194,\n    longitude: -74.0496379137039,\n  },\n  3209: {\n    name: \"Brunswick St\",\n    latitude: 40.7241765,\n    longitude: -74.05065640000001,\n  },\n  3267: {\n    name: \"Morris Canal\",\n    latitude: 40.7124188237569,\n    longitude: -74.03852552175522,\n  },\n  3212: {\n    name: \"Christ Hospital\",\n    latitude: 40.734785818,\n    longitude: -74.050443636,\n  },\n  3184: { name: \"Paulus Hook\", latitude: 40.7141454, longitude: -74.0335519 },\n  3681: {\n    name: \"Grand St\",\n    latitude: 40.71517767732029,\n    longitude: -74.03768330812454,\n  },\n  3679: {\n    name: \"Bergen Ave\",\n    latitude: 40.72210378668603,\n    longitude: -74.07145500183104,\n  },\n  3483: { name: \"Montgomery St\", latitude: 40.71942, longitude: -74.05099 },\n  3280: {\n    name: \"Astor Place\",\n    latitude: 40.71928220070703,\n    longitude: -74.07126188278198,\n  },\n  3214: {\n    name: \"Essex Light Rail\",\n    latitude: 40.712774200000005,\n    longitude: -74.03648570000001,\n  },\n  3791: {\n    name: \"Hoboken Ave at Monmouth St\",\n    latitude: 40.73520838045357,\n    longitude: -74.04696375131606,\n  },\n  3481: { name: \"York St\", latitude: 40.71649, longitude: -74.04105 },\n  3193: {\n    name: \"Lincoln Park\",\n    latitude: 40.7246050998869,\n    longitude: -74.07840594649316,\n  },\n  3677: {\n    name: \"Glenwood Ave\",\n    latitude: 40.72755146730012,\n    longitude: -74.07106071710588,\n  },\n  3268: {\n    name: \"Lafayette Park\",\n    latitude: 40.71346382669195,\n    longitude: -74.06285852193831,\n  },\n  3281: {\n    name: \"Leonard Gordon Park\",\n    latitude: 40.74590996631558,\n    longitude: -74.05727148056029,\n  },\n  3210: {\n    name: \"Pershing Field\",\n    latitude: 40.742677141,\n    longitude: -74.051788633,\n  },\n  3201: { name: \"Dey St\", latitude: 40.737711, longitude: -74.066921 },\n  3694: { name: \"Jackson Square\", latitude: 40.71113, longitude: -74.0789 },\n  3192: {\n    name: \"Liberty Light Rail\",\n    latitude: 40.711242299999995,\n    longitude: -74.0557013,\n  },\n  3198: {\n    name: \"Heights Elevator\",\n    latitude: 40.748715945380226,\n    longitude: -74.04044330120088,\n  },\n  3277: {\n    name: \"Communipaw & Berry Lane\",\n    latitude: 40.71435836870427,\n    longitude: -74.06661093235016,\n  },\n  3191: {\n    name: \"Union St\",\n    latitude: 40.71821129999999,\n    longitude: -74.08363940000001,\n  },\n  3426: {\n    name: \"JCBS Depot\",\n    latitude: 40.70965083364061,\n    longitude: -74.06860113143921,\n  },\n};\n","export const list_stations = [\n  {\n    name: \"Grove St PATH\",\n    latitude: 40.71958611647166,\n    longitude: -74.0431174635887,\n    id: 3186,\n  },\n  {\n    name: \"Sip Ave\",\n    latitude: 40.73089709786179,\n    longitude: -74.06391263008119,\n    id: 3195,\n  },\n  {\n    name: \"Newport Pkwy\",\n    latitude: 40.728744799999994,\n    longitude: -74.03210820000001,\n    id: 3199,\n  },\n  {\n    name: \"Columbus Dr at Exchange Pl\",\n    latitude: 40.71687,\n    longitude: -74.03281,\n    id: 3792,\n  },\n  {\n    name: \"City Hall\",\n    latitude: 40.717732500000004,\n    longitude: -74.04384499999999,\n    id: 3185,\n  },\n  {\n    name: \"Columbus Drive\",\n    latitude: 40.71835519823214,\n    longitude: -74.03891444206238,\n    id: 3275,\n  },\n  {\n    name: \"Harborside\",\n    latitude: 40.71925170000001,\n    longitude: -74.034234,\n    id: 3639,\n  },\n  {\n    name: \"Marin Light Rail\",\n    latitude: 40.71458403535893,\n    longitude: -74.04281705617905,\n    id: 3276,\n  },\n  {\n    name: \"Newport PATH\",\n    latitude: 40.7272235,\n    longitude: -74.03375890000001,\n    id: 3202,\n  },\n  {\n    name: \"Newark Ave\",\n    latitude: 40.72152515,\n    longitude: -74.046304543,\n    id: 3211,\n  },\n  {\n    name: \"Van Vorst Park\",\n    latitude: 40.71848892,\n    longitude: -74.047726625,\n    id: 3213,\n  },\n  {\n    name: \"Journal Square\",\n    latitude: 40.733670000000004,\n    longitude: -74.0625,\n    id: 3640,\n  },\n  {\n    name: \"Warren St\",\n    latitude: 40.721123600000006,\n    longitude: -74.03805095,\n    id: 3187,\n  },\n  {\n    name: \"Hamilton Park\",\n    latitude: 40.727595965999996,\n    longitude: -74.044247311,\n    id: 3203,\n  },\n  {\n    name: \"Oakland Ave\",\n    latitude: 40.7376037,\n    longitude: -74.05247829999999,\n    id: 3207,\n  },\n  {\n    name: \"Fairmount Ave\",\n    latitude: 40.72572613742557,\n    longitude: -74.07195925712584,\n    id: 3678,\n  },\n  {\n    name: \"McGinley Square\",\n    latitude: 40.7253399253558,\n    longitude: -74.06762212514876,\n    id: 3194,\n  },\n  { name: \"Hilltop\", latitude: 40.7311689, longitude: -74.0575736, id: 3206 },\n  {\n    name: \"Baldwin at Montgomery\",\n    latitude: 40.7236589,\n    longitude: -74.0641943,\n    id: 3225,\n  },\n  {\n    name: \"5 Corners Library\",\n    latitude: 40.73496102000952,\n    longitude: -74.05950307846071,\n    id: 3220,\n  },\n  {\n    name: \"Riverview Park\",\n    latitude: 40.7443187,\n    longitude: -74.04399090000001,\n    id: 3196,\n  },\n  {\n    name: \"Jersey & 3rd\",\n    latitude: 40.723331586464354,\n    longitude: -74.04595255851744,\n    id: 3272,\n  },\n  {\n    name: \"Brunswick & 6th\",\n    latitude: 40.726011729646245,\n    longitude: -74.0503889322281,\n    id: 3269,\n  },\n  {\n    name: \"Washington St\",\n    latitude: 40.7242941,\n    longitude: -74.0354826,\n    id: 3638,\n  },\n  {\n    name: \"Monmouth and 6th\",\n    latitude: 40.72568548362901,\n    longitude: -74.0487903356552,\n    id: 3278,\n  },\n  {\n    name: \"Manila & 1st\",\n    latitude: 40.72165072487999,\n    longitude: -74.04288411140442,\n    id: 3273,\n  },\n  {\n    name: \"Dixon Mills\",\n    latitude: 40.72163014263835,\n    longitude: -74.04996782541275,\n    id: 3279,\n  },\n  {\n    name: \"Jersey & 6th St\",\n    latitude: 40.72528910781132,\n    longitude: -74.04557168483734,\n    id: 3270,\n  },\n  {\n    name: \"JC Medical Center\",\n    latitude: 40.71653978099194,\n    longitude: -74.0496379137039,\n    id: 3205,\n  },\n  {\n    name: \"Brunswick St\",\n    latitude: 40.7241765,\n    longitude: -74.05065640000001,\n    id: 3209,\n  },\n  {\n    name: \"Morris Canal\",\n    latitude: 40.7124188237569,\n    longitude: -74.03852552175522,\n    id: 3267,\n  },\n  {\n    name: \"Christ Hospital\",\n    latitude: 40.734785818,\n    longitude: -74.050443636,\n    id: 3212,\n  },\n  {\n    name: \"Paulus Hook\",\n    latitude: 40.7141454,\n    longitude: -74.0335519,\n    id: 3184,\n  },\n  {\n    name: \"Grand St\",\n    latitude: 40.71517767732029,\n    longitude: -74.03768330812454,\n    id: 3681,\n  },\n  {\n    name: \"Bergen Ave\",\n    latitude: 40.72210378668603,\n    longitude: -74.07145500183104,\n    id: 3679,\n  },\n  { name: \"Montgomery St\", latitude: 40.71942, longitude: -74.05099, id: 3483 },\n  {\n    name: \"Astor Place\",\n    latitude: 40.71928220070703,\n    longitude: -74.07126188278198,\n    id: 3280,\n  },\n  {\n    name: \"Essex Light Rail\",\n    latitude: 40.712774200000005,\n    longitude: -74.03648570000001,\n    id: 3214,\n  },\n  {\n    name: \"Hoboken Ave at Monmouth St\",\n    latitude: 40.73520838045357,\n    longitude: -74.04696375131606,\n    id: 3791,\n  },\n  { name: \"York St\", latitude: 40.71649, longitude: -74.04105, id: 3481 },\n  {\n    name: \"Lincoln Park\",\n    latitude: 40.7246050998869,\n    longitude: -74.07840594649316,\n    id: 3193,\n  },\n  {\n    name: \"Glenwood Ave\",\n    latitude: 40.72755146730012,\n    longitude: -74.07106071710588,\n    id: 3677,\n  },\n  {\n    name: \"Lafayette Park\",\n    latitude: 40.71346382669195,\n    longitude: -74.06285852193831,\n    id: 3268,\n  },\n  {\n    name: \"Leonard Gordon Park\",\n    latitude: 40.74590996631558,\n    longitude: -74.05727148056029,\n    id: 3281,\n  },\n  {\n    name: \"Pershing Field\",\n    latitude: 40.742677141,\n    longitude: -74.051788633,\n    id: 3210,\n  },\n  { name: \"Dey St\", latitude: 40.737711, longitude: -74.066921, id: 3201 },\n  { name: \"Jackson Square\", latitude: 40.71113, longitude: -74.0789, id: 3694 },\n  {\n    name: \"Liberty Light Rail\",\n    latitude: 40.711242299999995,\n    longitude: -74.0557013,\n    id: 3192,\n  },\n  {\n    name: \"Heights Elevator\",\n    latitude: 40.748715945380226,\n    longitude: -74.04044330120088,\n    id: 3198,\n  },\n  {\n    name: \"Communipaw & Berry Lane\",\n    latitude: 40.71435836870427,\n    longitude: -74.06661093235016,\n    id: 3277,\n  },\n  {\n    name: \"Union St\",\n    latitude: 40.71821129999999,\n    longitude: -74.08363940000001,\n    id: 3191,\n  },\n  {\n    name: \"JCBS Depot\",\n    latitude: 40.70965083364061,\n    longitude: -74.06860113143921,\n    id: 3426,\n  },\n];\n","export default __webpack_public_path__ + \"static/media/all2020.6942c60b.csv\";","/* global requestAnimationFrame, cancelAnimationFrame */\nimport React, { useEffect, useState } from \"react\";\nimport { styled, withStyles } from \"@material-ui/core/styles\";\nimport Slider from \"@material-ui/core/Slider\";\nimport Button from \"@material-ui/core/IconButton\";\nimport PlayIcon from \"@material-ui/icons/PlayArrow\";\nimport PauseIcon from \"@material-ui/icons/Pause\";\nimport Lock from \"@material-ui/icons/Lock\";\nimport LockOpen from \"@material-ui/icons/LockOpen\";\n\nconst PositionContainer = styled(\"div\")({\n  position: \"absolute\",\n  zIndex: 1,\n  bottom: \"40px\",\n  width: \"100%\",\n  display: \"flex\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n});\n\nconst SliderInput = withStyles({\n  root: {\n    marginLeft: 12,\n    width: \"40%\",\n  },\n  valueLabel: {\n    \"& span\": {\n      background: \"none\",\n      color: \"#ff0000\",\n    },\n  },\n})(Slider);\n\nexport default function RangeInput({\n  min,\n  max,\n  value,\n  animationSpeed,\n  onChange,\n  formatLabel,\n  togglePlaying,\n}) {\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [animation] = useState({});\n  const [lock, setLock] = useState(true);\n  const [span, setSpan] = useState(value[1] - value[0]);\n  // prettier-ignore\n  // useEffect(() => {\n  //   return () => animation.id && cancelAnimationFrame(animation.id);\n  // }, [animation]);\n\n  // if (isPlaying && !animation.id) {\n  //   const span = value[1] - value[0];\n  //   let nextValueMin = value[0] + animationSpeed;\n  //   if (nextValueMin + span >= max) {\n  //     nextValueMin = min;\n  //   }\n  //   animation.id = requestAnimationFrame(() => {\n  //     animation.id = 0;\n  //     onChange([nextValueMin, nextValueMin + span]);\n  //   });\n  // }\n\n  // const isButtonEnabled = value[0] > min || value[1] < max;\n\n  const localOnChange = (newValue) => {\n    let updateValue = [value[0], value[1]];\n    if (lock){\n      if(newValue[1]===updateValue[1]) {\n        updateValue = [newValue[0], newValue[0] + span]\n      } else {\n        updateValue = [newValue[1] - span, newValue[1]]\n      }\n      if(updateValue[0] < min){\n        updateValue = [min,min + span]\n      }\n      if (updateValue[1] > max) {\n        updateValue = [max - span,max]\n      }\n      onChange(updateValue);\n    } else {\n      onChange(newValue);\n    }\n  }\n\n  return (\n    <PositionContainer>\n      {/* <Button\n        color=\"secondary\"\n        disabled={!isButtonEnabled}\n        onClick={() => {\n          setIsPlaying(!isPlaying)\n        }}\n      >\n        {isPlaying ? <PauseIcon title=\"Stop\" /> : <PlayIcon title=\"Animate\" />}\n      </Button> */}\n      <Button\n        color=\"secondary\"\n        onClick={() => {\n          setLock(!lock);\n          setSpan(value[1] - value[0]);\n        }}\n      >\n        {lock ? (\n          <Lock title=\"Lock Time Filter\" />\n        ) : (\n          <LockOpen title=\"Open Time Filter\" />\n        )}\n      </Button>\n      <SliderInput\n        color=\"secondary\"\n        min={min}\n        max={max}\n        value={value}\n        onChange={(event, newValue) => localOnChange(newValue)}\n        valueLabelDisplay=\"on\"\n        valueLabelFormat={formatLabel}\n      />\n    </PositionContainer>\n  );\n}\n","import { React, Component } from \"react\";\nimport { FlyToInterpolator } from \"react-map-gl\";\nimport Map from \"./Map\";\nimport { station_info } from \"../stations\";\nimport { list_stations } from \"../list_stations\";\nimport { csv } from \"d3\";\nimport trip_data from \"./all2020.csv\";\nimport RangeInput from \"./RangeInput\";\n\nconst nyc = {\n  longitude: -73.9544312807859,\n  latitude: 40.737897096399855,\n  zoom: 11,\n};\n\nconst jc = {\n  latitude: 40.725779443680345,\n  longitude: -74.05589375312678,\n  zoom: 13,\n  bearing: 0.8015740858150702,\n  pitch: 40.9,\n};\n\nclass MapWrapper extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      viewState: jc,\n      station_info: station_info,\n      stations: list_stations,\n      trips: [],\n      loading: true,\n      time_filter: [600, 780],\n      playing: false,\n    };\n  }\n\n  setViewState = (viewState) => {\n    this.setState({ viewState });\n  };\n\n  setFilter = (filter) => {\n    this.setState({\n      time_filter: filter,\n    });\n  };\n\n  formatLabel = (t) => {\n    const hour = (\"00\" + Math.floor(t / 60)).slice(-2);\n    const minutes = (\"00\" + (t % 60)).slice(-2);\n    return `${hour}:${minutes}`;\n  };\n\n  handleChangeViewState = ({ viewState }) => {\n    this.setViewState(viewState);\n  };\n\n  handleFlyTo = (destination) => {\n    this.setViewState({\n      ...this.state.viewState,\n      ...destination,\n      transitionDuration: 2000,\n      transitionInterpolator: new FlyToInterpolator(),\n    });\n  };\n\n  togglePlaying = () => {\n    this.setState({\n      playing: !this.state.playing,\n    });\n  };\n\n  componentDidMount() {\n    csv(trip_data, function (d) {\n      const t = new Date(d[\"starttime\"]);\n      return {\n        duration: d[\"tripduration\"],\n        start_datetime: d[\"starttime\"],\n        start_time: t.toTimeString(),\n        start_minutes: t.getHours() * 60 + t.getMinutes(),\n        start_id: +d[\"start station id\"],\n        end_id: +d[\"end station id\"],\n        start_position: [\n          +d[\"start station longitude\"],\n          +d[\"start station latitude\"],\n        ],\n        end_position: [+d[\"end station longitude\"], +d[\"end station latitude\"]],\n      };\n    }).then((data) => {\n      const start_cut = new Date(\"01-01-2020\");\n      const stop_cut = new Date(\"05-01-2020\");\n      const filter_data = data.filter(\n        (d) =>\n          d.start_position[0] != null &&\n          d.start_position[1] != null &&\n          d.end_position[0] != null &&\n          d.end_position[1] != null &&\n          d.start_id in this.state.station_info &&\n          d.end_id in this.state.station_info &&\n          new Date(d.start_datetime) > start_cut &&\n          new Date(d.start_datetime) < stop_cut\n      );\n      this.setState({\n        trips: filter_data,\n        loading: false,\n      });\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <Map\n          width=\"100vw\"\n          height=\"100vh\"\n          viewState={this.state.viewState}\n          onViewStateChange={this.handleChangeViewState}\n          stations={this.state.stations}\n          trips={this.state.trips}\n          toggle={this.state.toggle}\n          time_filter={this.state.time_filter}\n          loading={this.state.loading}\n          isPLaying={this.state.playing}\n        />\n        <RangeInput\n          min={0}\n          max={1439}\n          value={this.state.time_filter}\n          animationSpeed={20}\n          formatLabel={this.formatLabel}\n          onChange={this.setFilter}\n          togglePlaying={this.togglePlaying}\n        />\n      </div>\n    );\n  }\n}\n\nexport default MapWrapper;\n","import React from 'react';\nimport './App.css';\n\nimport MapWrapper from './components/MapWrapper';\n\n\nconst App = () => {\n  return(\n    <MapWrapper/>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}